apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-gangwon
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-gangwon
  template:
    metadata:
      labels:
        app: mysql-gangwon
    spec:
      # initContainers: 메인 컨테이너가 시작되기 전에 MySQL 데이터 디렉토리를 초기화하는 초기화 컨테이너
      initContainers:
      - name: init-mysql
        image: busybox
        command: ['sh', '-c', 'rm -rf /var/lib/mysql/*']
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql

      # 메인 MySQL 컨테이너 설정
      containers:
      - name: mysql
        image: mysql:5.7
        env:
        # MySQL 데이터베이스 이름 설정
        - name: MYSQL_DATABASE
          value: "gangwon"
          # Kubernetes Secret에서 MySQL 루트 비밀번호 가져오기
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: MYSQL_ROOT_PASSWORD
        ports:
        # MySQL 컨테이너 포트 설정
        - containerPort: 3306
        volumeMounts:
        # 영구 스토리지 볼륨 마운트
        - name: mysql-storage
          mountPath: /var/lib/mysql
          # 초기화 스크립트를 위한 ConfigMap 마운트
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
        # Liveness Probe: 컨테이너가 살아 있는지 확인
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        # Readiness Probe: 컨테이너가 준비되었는지 확인
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      # 영구 스토리지 볼륨 클레임
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: pvc-gangwon
          # 초기화 스크립트를 위한 ConfigMap
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-gangwon
spec:
  ports:
  # MySQL 서비스 포트 설정
  - port: 3307
    targetPort: 3306
  selector:
    app: mysql-gangwon
